{"version":3,"sources":["img/pokeball.svg","components/navbar.jsx","components/pokemoncard.jsx","components/pokemonarea.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","newState","classes","_React$useState","React","useState","open","vertical","horizontal","_React$useState2","Object","slicedToArray","state","setState","react_default","a","createElement","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","onClick","objectSpread","Menu_default","Typography","variant","src","logo","alt","Snackbar","anchorOrigin","key","concat","onClose","autoHideDuration","ContentProps","aria-describedby","message","id","Pokemoncard","isEmpty","obj","hasOwnProperty","_this$props","this","props","pokemon","error","isLoaded","pokemonSpecies","pokemonEvolution","name","sprites","front_default","egg_groups","getEvolutions","height","weight","base_experience","getDescriptions","nbrDesc","nbrDescEnFound","flavor_text_entries","language","flavor_text","chain","evolves_to","secondEvolution","Fragment","species","map","gh","i","Component","POKEMONAPI","POKEMONSPECIESAPI","MyButton","styled","Button","background","border","borderRadius","boxShadow","padding","margin","CssTextField","withStyles","& label.Mui-focused","& label","& .MuiInputBase-input","& .MuiOutlinedInput-root","& fieldset","borderColor","&:hover fieldset","&.Mui-focused fieldset","TextField","Pokemonarea","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","callEvolutionChainAPI","console","log","fetch","evolution_chain","url","then","response","json","data","callPokemonAPI","pokemonId","pokemonAPICall","pokemonSpeciesAPICall","Promise","all","values","value","pokemonEvolutions","pokemonIdReady","handleChange","bind","assertThisInitialized","handleRandom","event","_this2","pokemonIdValue","target","_this3","Math","floor","random","_this$state","type","label","onChange","InputLabelProps","shrink","components_pokemoncard","App","components_pokemonarea","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e3a6c8b5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokeball.2b4798f5.svg\";","import React from \"react\";\r\nimport \"./navbar.css\";\r\nimport logo from \"../img/pokeball.svg\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  }\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    vertical: \"top\",\r\n    horizontal: \"center\"\r\n  });\r\n\r\n  const { vertical, horizontal, open } = state;\r\n\r\n  const handleClick = newState => () => {\r\n    setState({ open: true, ...newState });\r\n  };\r\n\r\n  function handleClose() {\r\n    setState({ ...state, open: false });\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"Menu\"\r\n            onClick={handleClick({ vertical: \"top\", horizontal: \"left\" })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <img src={logo} className=\"navbar-logo\" alt=\"pokeball\" />\r\n            Pokedex\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical, horizontal }}\r\n        key={`${vertical},${horizontal}`}\r\n        open={open}\r\n        onClose={handleClose}\r\n        autoHideDuration={1000}\r\n        ContentProps={{\r\n          \"aria-describedby\": \"message-id\"\r\n        }}\r\n        message={<span id=\"message-id\">Do not work...yet!</span>}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./pokemoncard.css\";\r\n\r\nclass Pokemoncard extends Component {\r\n  render() {\r\n    const {\r\n      error,\r\n      isLoaded,\r\n      pokemon,\r\n      pokemonSpecies,\r\n      pokemonEvolution\r\n    } = this.props;\r\n    return (\r\n      <div className={\"product-card \" + pokemonSpecies.color.name}>\r\n        <div className=\"product-additional\">\r\n          <div className=\"product-img-card\">\r\n            <div className=\"product-type product-center\">N°{pokemon.id}</div>\r\n            <div className=\"product-img product-center\">\r\n              <img src={pokemon.sprites.front_default} />\r\n            </div>\r\n            <div className=\"product-status product-center\">\r\n              {pokemonSpecies.egg_groups[0].name}\r\n            </div>\r\n\r\n            <i className=\"fa fa-language product-center\" />\r\n          </div>\r\n          <div className=\"product-more-info\">\r\n            <h1>{pokemon.name}</h1>\r\n            <p />\r\n\r\n            <div className=\"product-coords\">\r\n              <span>Evolution chain:</span>\r\n            </div>\r\n            <br />\r\n            {this.getEvolutions()}\r\n\r\n            <div className=\"product-stats\">\r\n              <div>\r\n                <div className=\"title\">Height</div>\r\n                <i className=\"fa fa-language\" />\r\n                <div className=\"value\">{pokemon.height / 10}m</div>\r\n              </div>\r\n              <div>\r\n                <div className=\"title\">weight</div>\r\n                <i className=\"fa fa-desktop\" />\r\n                <div className=\"value\">{pokemon.weight / 10}kg</div>\r\n              </div>\r\n              <div>\r\n                <div className=\"title\">XP</div>\r\n                <i className=\"fa fa-feed\" />\r\n                <div className=\"value\">{pokemon.base_experience}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"product-general\">\r\n          <h1>{pokemon.name}</h1>\r\n          {this.getDescriptions()}\r\n          <span className=\"product-more\">\r\n            Mouse over the card for more info\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getDescriptions() {\r\n    let nbrDesc = 0;\r\n    let nbrDescEnFound = 0;\r\n    while (nbrDescEnFound == 0) {\r\n      if (\r\n        this.props.pokemonSpecies.flavor_text_entries[nbrDesc].language.name ===\r\n        \"en\"\r\n      ) {\r\n        nbrDescEnFound = 1;\r\n      } else {\r\n        nbrDesc = nbrDesc + 1;\r\n      }\r\n    }\r\n    return (\r\n      <p>\r\n        {this.props.pokemonSpecies.flavor_text_entries[nbrDesc].flavor_text}\r\n      </p>\r\n    );\r\n  }\r\n\r\n  getEvolutions() {\r\n    const { secondEvolution } = this.props.pokemonEvolution.chain.evolves_to;\r\n    if (this.isEmpty(this.props.pokemonEvolution.chain.evolves_to[0])) {\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"product-evolution\"> - </div>\r\n          <div className=\"product-evolution\">I don't evolve! I'm unique! </div>\r\n          <div className=\"product-evolution\"> - </div>\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      if (\r\n        this.isEmpty(\r\n          this.props.pokemonEvolution.chain.evolves_to[0].evolves_to[0]\r\n        )\r\n      ) {\r\n        if (this.isEmpty(this.props.pokemonEvolution.chain.evolves_to[1])) {\r\n          return (\r\n            <React.Fragment>\r\n              <div className=\"product-evolution\">\r\n                {this.props.pokemonEvolution.chain.species.name}\r\n              </div>\r\n              <div className=\"product-evolution\">\r\n                {this.props.pokemonEvolution.chain.evolves_to[0].species.name}\r\n              </div>\r\n              <div className=\"product-evolution\"> - </div>\r\n            </React.Fragment>\r\n          );\r\n        } else {\r\n          return (\r\n            <React.Fragment>\r\n              <div className=\"product-evolution\">\r\n                {this.props.pokemonEvolution.chain.species.name}\r\n              </div>\r\n              <div className=\"product-evolution2\">\r\n                {this.props.pokemonEvolution.chain.evolves_to.map((gh, i) => (\r\n                  <span key={i}>{gh.species.name}, </span>\r\n                ))}\r\n              </div>\r\n            </React.Fragment>\r\n          );\r\n        }\r\n      } else {\r\n        return (\r\n          <React.Fragment>\r\n            <div className=\"product-evolution\">\r\n              {this.props.pokemonEvolution.chain.species.name}\r\n            </div>\r\n            <div className=\"product-evolution\">\r\n              {this.props.pokemonEvolution.chain.evolves_to[0].species.name}\r\n            </div>\r\n            <div className=\"product-evolution\">\r\n              {\r\n                this.props.pokemonEvolution.chain.evolves_to[0].evolves_to[0]\r\n                  .species.name\r\n              }\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  isEmpty = obj => {\r\n    for (var key in obj) {\r\n      if (obj.hasOwnProperty(key)) return false;\r\n    }\r\n    return true;\r\n  };\r\n}\r\n\r\nexport default Pokemoncard;\r\n","import React, { Component } from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { styled } from \"@material-ui/styles\";\r\n\r\nimport \"./pokemonarea.css\";\r\nimport Pokemoncard from \"./pokemoncard\";\r\nconst POKEMONAPI = \"https://pokeapi.co/api/v2/pokemon/\";\r\nconst POKEMONSPECIESAPI = \"https://pokeapi.co/api/v2/pokemon-species/\";\r\n\r\nconst MyButton = styled(Button)({\r\n  background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\r\n  border: 0,\r\n  borderRadius: 3,\r\n  boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\r\n  color: \"white\",\r\n  height: 48,\r\n  padding: \"0 30px\",\r\n  margin: \"20px\"\r\n});\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    \"& label.Mui-focused\": {\r\n      color: \"white\"\r\n    },\r\n    \"& label\": {\r\n      color: \"white\"\r\n    },\r\n    \"& .MuiInputBase-input\": {\r\n      color: \"white\"\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"white\"\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"grey\"\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"green\"\r\n      }\r\n    }\r\n  }\r\n})(TextField);\r\n\r\nclass Pokemonarea extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      pokemon: [],\r\n      pokemonSpecies: [],\r\n      pokemonEvolution: [],\r\n      pokemonEvolutions: 1,\r\n      pokemonIdReady: true,\r\n      pokemonId: 1\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleRandom = this.handleRandom.bind(this);\r\n    this.callPokemonAPI = this.callPokemonAPI.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    let pokemonIdValue = \"\";\r\n    if ((event.target.value > 0) & (event.target.value < 808)) {\r\n      pokemonIdValue = event.target.value;\r\n      this.setState({ pokemonIdReady: true, pokemonId: pokemonIdValue }, () => {\r\n        this.callPokemonAPI(this.state.pokemonId);\r\n      });\r\n    } else {\r\n      this.setState({ pokemonIdReady: false, pokemonId: pokemonIdValue });\r\n    }\r\n  }\r\n\r\n  handleRandom() {\r\n    this.setState(\r\n      { pokemonIdReady: true, pokemonId: Math.floor(Math.random() * 808 + 1) },\r\n      () => {\r\n        this.callPokemonAPI(this.state.pokemonId);\r\n      }\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"Pokemon - Mounted\");\r\n    if (this.state.pokemonIdReady == true) {\r\n      this.callPokemonAPI(this.state.pokemonId);\r\n      console.log(\"Pokemon API called\");\r\n    }\r\n    this.setState({ pokemonIdReady: false });\r\n  }\r\n\r\n  callEvolutionChainAPI = () => {\r\n    console.log(\"Pokemon Evolution API called\");\r\n    fetch(this.state.pokemonSpecies.evolution_chain.url)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          pokemonEvolution: data\r\n        });\r\n      });\r\n  };\r\n\r\n  callPokemonAPI = pokemonId => {\r\n    let pokemonAPICall = fetch(POKEMONAPI + this.state.pokemonId);\r\n    let pokemonSpeciesAPICall = fetch(POKEMONSPECIESAPI + this.state.pokemonId);\r\n    Promise.all([pokemonAPICall, pokemonSpeciesAPICall])\r\n      .then(values => Promise.all(values.map(value => value.json())))\r\n      .then(\r\n        data => {\r\n          this.setState(\r\n            {\r\n              pokemon: data[0],\r\n              pokemonSpecies: data[1]\r\n            },\r\n            () => {\r\n              this.callEvolutionChainAPI();\r\n            }\r\n          );\r\n        },\r\n        error => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      error,\r\n      isLoaded,\r\n      pokemon,\r\n      pokemonSpecies,\r\n      pokemonEvolution,\r\n      pokemonId\r\n    } = this.state;\r\n\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"pokemon-options\">\r\n            <CssTextField\r\n              id=\"outlined-number\"\r\n              type=\"number\"\r\n              label=\"Pokemon ID\"\r\n              value={pokemonId}\r\n              onChange={this.handleChange}\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n            />\r\n\r\n            <MyButton\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={this.handleRandom}\r\n            >\r\n              Random\r\n            </MyButton>\r\n          </div>\r\n          <Pokemoncard\r\n            pokemonId={pokemonId}\r\n            pokemon={pokemon}\r\n            pokemonSpecies={pokemonSpecies}\r\n            pokemonEvolution={pokemonEvolution}\r\n          />\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Pokemonarea;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport \"typeface-roboto\";\r\nimport Navbar from \"./components/navbar\";\r\nimport Pokemonarea from \"./components/pokemonarea\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar />\r\n      <header className=\"App-header\">\r\n        <Pokemonarea />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}